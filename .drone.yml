---
kind: pipeline
type: kubernetes
name: default

platform:
  os: linux
  arch: amd64

steps:
- name: synch_dev_secrets
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/cop-secrets
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: DEV_DRONE_AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY:
      from_secret: DEV_DRONE_AWS_SECRET_ACCESS_KEY
    DEPLOY_ENV: dev
    DRONE_SERVER: https://drone-gh.acp.homeoffice.gov.uk
    DRONE_TOKEN:
      from_secret: DRONE_V1_PUBLIC_TOKEN
    DRONE_VERSION: ${DRONE_SYSTEM_VERSION}
  when:
    branch:
    - main
    event:
    - push

- name: build
  pull: always
  image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
  commands:
  - /usr/local/bin/wait
  - docker build -t spcr-test-reports:$${DRONE_COMMIT_SHA} .
  when:
    branch:
    - main
    event:
    - push

- name: vulnerability-scan
  pull: always
  image: <ANCHORE_SUBMISSION_IMAGE_URL>
  environment:
    IMAGE_NAME: <PROJECT_NAME>:${DRONE_COMMIT_SHA}
    LOCAL_IMAGE: true
    TOLERATE: low
    WHITELIST_FILE: whitelist
  when:
    branch:
    - main
    event:
    - push

- name: dev_image_to_ecr
  image: plugins/ecr
  settings:
    access_key:
      from_secret: DEV_SPCR_TEST_REPORTS_AWS_ACCESS_KEY
    registry: 340268328991.dkr.ecr.eu-west-2.amazonaws.com
    repo: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/spcr/test-reports
    secret_key:
      from_secret: DEV_SPCR_TEST_REPORTS_AWS_SECRET_KEY
    tags:
    - ${DRONE_COMMIT_SHA}
    - dev
  environment:
    AWS_REGION: eu-west-2
  when:
    branch:
    - main
    event:
    - push

- name: deploy_to_dev
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/helm:latest
  commands:
  - /run-helm.sh list -n spcr-dev
  - helm upgrade --install spcr-test-reports ./helm -f ./helm/dev.yaml -n spcr-dev --dry-run
  - helm upgrade --install spcr-test-reports ./helm -f ./helm/dev.yaml -n spcr-dev
  environment:
    KUBE_CERTIFICATE_AUTHORITY_DATA:
      from_secret: DEV_SPCR_TEST_REPORTS_KUBE_CA_DATA
    KUBE_CLUSTER_NAME:
      from_secret: DEV_SPCR_TEST_REPORTS_KUBE_CLUSTER_NAME
    KUBE_SERVER:
      from_secret: DEV_SPCR_TEST_REPORTS_KUBE_SERVER
    KUBE_TOKEN:
      from_secret: DEV_SPCR_KUBE_TOKEN
  when:
    branch:
    - main
    event:
    - push

- name: notify
  pull: if-not-exists
  image: plugins/slack
  settings:
    channel: spcr-deployments
    template: "{{#build.deployTo}}\n  *{{repo.name}} - Build {{build.number}} - {{uppercasefirst build.deployTo}} - {{uppercase build.status}}*\n  {{build.link}}\n{{else}}\n  *{{repo.name}} - Build {{build.number}} - Development - {{uppercase build.status}}*\n  {{build.link}}\n{{/build.deployTo}}\n"
    username: Drone Build Watcher
  environment:
    SLACK_WEBHOOK:
      from_secret: SLACK_WEBHOOK
  failure: ignore
  when:
    branch:
    - main
    - version-*
    event:
    - promote
    - push
    status:
    - success
    - failure

services:
- name: docker
  image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind

- name: anchore-submission-server
  pull: always
  image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/anchore-submission:latest
  commands:
  - /run.sh server
...
